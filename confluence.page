<div>
    <label for="username">SSH Username:</label>
    <input type="text" id="username" name="username" required>
<br></br>
    <label for="pass">SSH Password:</label>
    <input type="password" id="password" name="password" required>
<br></br>
<label for="pass">Include Windows/DocX servers:</label>
<input id="windows" name="windows" type="checkbox"/>
<br></br>
<input type="button" id="mtputtyfile" value="Generate MTPuTTY-import.xml"/>
</div>

<script language="javascript"> 
function csvJSON(csv) {
    var lines = csv.split("\n");
    var result = [];
    var headers = lines[0].split(",");
    for (var i = 1; i < lines.length; i++) {
        var obj = {};
        var currentline = lines[i].split(",");
        for (var j = 0; j < headers.length; j++) {
            obj[headers[j]] = currentline[j];
        }
        result.push(obj);
    }
    return JSON.stringify(result);
}

function httpGet(Url) {
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", Url, false);
    xmlHttp.send(null);
    return xmlHttp.responseText;
}

function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

ServerListUrl = "https://onemedhokway.medhokapps.com/display/ITOPS/Enhanced+AWS+Server+List";

/// Convert html page to JSON. START
var serverlist = httpGet(ServerListUrl);
var serverlist = serverlist.substr(serverlist.search('<h2 id="EnhancedAWSServerList'));
var serverlist = serverlist.substr(0, serverlist.search("\n"));
let t = 0;
serverlist = serverlist.replace(/<thead(.*?)<\/thead>/gi, match => ++t > 1 ? '' : match);
serverlist = serverlist.replace(/<h2(.*?)<\/h2>/gi, '');
serverlist = serverlist.replace(/<\/tr>/g, '\n');
serverlist = serverlist.replace(/<\/th>/g, ',');
serverlist = serverlist.replace(/<\/td>/g, ',');
serverlist = serverlist.replace(/<[^>]+>/g, '');
serverlist = serverlist.replaceAll(",\n", '\n');
serverlist = serverlist.replace(/\n$/, '');
serverlist = csvJSON(serverlist);

/// Convert html page to JSON. END

/// Genereting MTPuTTY import file. START

document.getElementById("mtputtyfile").addEventListener("click", function () {
    if (serverlist.length < 100000) {
        window.alert("Function csvJSON return error. Apparently Enhanced AWS Server List (https://onemedhokway.medhokapps.com/display/ITOPS/Enhanced+AWS+Server+List) format was significantly changed. Convert html page to JSON was failed. Please reach out Automation team if you still need this functionality");
        throw new Error("Stop JS execution because of error");
    }
    serverlisttoxml = JSON.parse(serverlist);
    var username = document.getElementById("username").value;
    var password = document.getElementById("password").value;

    if (username == "" || password == "") {
        window.alert("Please, fill out Username and Password");
        throw new Error("Stop JS execution because of error");
    }

    ///XML Build. START
    var ClientCreated = "";
    var Node0ElementCl = 0;
    var ServersConverted = 0;
    var JSONInc = 0;

    var doc = document.implementation.createDocument("", "", null);
    var ServersElement = doc.createElement("Servers");
    var Ins = doc.createProcessingInstruction('xml', 'version="1.0" encoding="UTF-8"');
    doc.insertBefore(Ins, doc.ServersElement);
    var PuttyElement = doc.createElement("Putty");
    for (var i = 0; i < serverlisttoxml.length; i++) {
        var jsonData = serverlisttoxml[i];
        if ((jsonData['Name'].toUpperCase().includes("WINDOWS") || jsonData['Name'].toUpperCase().includes("DOCX")) && document.getElementById("windows").checked == false)
 {
// do nothing
 } else {
        var Client = jsonData['Client'];
        if (ClientCreated != Client) {
            if (Node0ElementCl != 0) {
                PuttyElement.appendChild(Node0Element);
            }
            var Node0Element = doc.createElement("Node");
            Node0Element.setAttribute("Type", "0");
            var DisplayName0Element = doc.createElement("DisplayName");
            DisplayName0ElementText = doc.createTextNode(Client);
            DisplayName0Element.appendChild(DisplayName0ElementText);
            Node0Element.appendChild(DisplayName0Element);
            ClientCreated = Client;
            Node0ElementCl = 1;
        }
        if (jsonData['Public IP'] && jsonData['Client'] && jsonData['Name']) {
            // do nothing
        } else {
            JSONInc = JSONInc + 1;
        }

        if (jsonData['Environment'].replace(/\s/g, '').toUpperCase() === 'PROD') {
            var SavedSession = 'Prod';
        } else {
            var SavedSession = 'Default Settings';
        }
        var DisplayName = jsonData['Name'] + ' (' + jsonData['Public IP'] + ')';
        if (jsonData['Platform'].toUpperCase() === 'CP' || jsonData['Platform'].toUpperCase() === 'MP') {
            DisplayName = DisplayName + ' (' + jsonData['Platform'] + ')';
        }
        var ServerName = jsonData['Public IP'];
        var PuttyConType = 4;
        var Port = 0;
        var UserName = username;
        var Password = password;
        var PasswordDelay = 0;
        var CLParams = jsonData['Public IP'] + ' -l ' + username + ' -ssh -pw ' + password;
        var ScriptDelay = 0;

        var Node1Element = doc.createElement("Node");
        Node1Element.setAttribute("Type", "1");

        var SavedSessionElement = doc.createElement("SavedSession");
        var SavedSessionElementText = doc.createTextNode(SavedSession);
        SavedSessionElement.appendChild(SavedSessionElementText);
        Node1Element.appendChild(SavedSessionElement);

        var DisplayName1Element = doc.createElement("DisplayName");
        var DisplayName1ElementText = doc.createTextNode(DisplayName);
        DisplayName1Element.appendChild(DisplayName1ElementText);
        Node1Element.appendChild(DisplayName1Element);

        var ServerNameElement = doc.createElement("ServerName");
        var ServerNameElementtText = doc.createTextNode(ServerName);
        ServerNameElement.appendChild(ServerNameElementtText);
        Node1Element.appendChild(ServerNameElement);

        var PuttyConTypeElement = doc.createElement("PuttyConType");
        var PuttyConTypeElementText = doc.createTextNode(PuttyConType);
        PuttyConTypeElement.appendChild(PuttyConTypeElementText);
        Node1Element.appendChild(PuttyConTypeElement);

        var PortElement = doc.createElement("Port");
        var PortElementText = doc.createTextNode(Port);
        PortElement.appendChild(PortElementText);
        Node1Element.appendChild(PortElement);

        var UserNameElement = doc.createElement("UserName");
        var UserNameElementText = doc.createTextNode(UserName);
        UserNameElement.appendChild(UserNameElementText);
        Node1Element.appendChild(UserNameElement);

        var PasswordElement = doc.createElement("Password");
        var PasswordElementText = doc.createTextNode(Password);
        PasswordElement.appendChild(PasswordElementText);
        Node1Element.appendChild(PasswordElement);

        var PasswordDelayElement = doc.createElement("PasswordDelay");
        var PasswordDelayElementText = doc.createTextNode(PasswordDelay);
        PasswordDelayElement.appendChild(PasswordDelayElementText);
        Node1Element.appendChild(PasswordDelayElement);

        var CLParamsElement = doc.createElement("CLParams");
        var CLParamsElementText = doc.createTextNode(CLParams);
        CLParamsElement.appendChild(CLParamsElementText);
        Node1Element.appendChild(CLParamsElement);

        var ScriptDelayElement = doc.createElement("ScriptDelay");
        var ScriptDelayElementText = doc.createTextNode(ScriptDelay);
        ScriptDelayElement.appendChild(ScriptDelayElementText);
        Node1Element.appendChild(ScriptDelayElement);

        Node0Element.appendChild(Node1Element);
        ServersConverted = ServersConverted + 1;
}
    }
    ServersElement.appendChild(PuttyElement);
    doc.appendChild(ServersElement);

    let xml = new XMLSerializer().serializeToString(doc);
    var ClientCreated = "";
    var Node0ElementCl = 0;
    ///XML Build. End

    if (JSONInc === 0) {
        window.alert("Completed Successfully \n\n" + ServersConverted + " servers have been converted\n");
    } else {
        window.alert("Completed Successfully but with a few remarks...\n" + JSONInc + " servers have been converted with remarks\nLooks like some values in columns <Public IP>, <Client>, <Name> are not filled out in Enhanced AWS Server List (https://onemedhokway.medhokapps.com/display/ITOPS/Enhanced+AWS+Server+List). Please check it and if it is please ask SE or Automation to check Enhanced AWS Server List. You can import the servers anyway but better to make a backup your servers first. \n" + ServersConverted + " servers have been converted\n");
    }
    var text = xml;
    var filename = "MTPuTTY-import.xml";
    download(filename, text);
}, false);
/// Genereting MTPuTTY import file. END
</script>
